{
  "name": "joex",
  "version": "0.0.10",
  "description": "Javascript Object Extensions",
  "main": "index.js",
  "isomorphic": true,
  "scripts": {
    "test": "istanbul cover node_modules/mocha/bin/_mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/anywhichway/joex.git"
  },
  "keywords": [
    "intersection",
    "disjoint",
    "coincident",
    "crossproduct",
    "soundex",
    "lt",
    "lte",
    "eq",
    "neq",
    "gte",
    "gt",
    "Array.min",
    "Array.max",
    "Array.avg",
    "Array.sum",
    "String.between",
    "String.outside",
    "Date.before",
    "Date.after",
    "Set.some",
    "Set.every",
    "Set.min",
    "Set.max",
    "Set.avg",
    "Set.sum"
  ],
  "author": {
    "name": "Simon Y. Blackwell",
    "email": "syblackwell@anywhichway.com",
    "url": "http://www.github.com/anywhichway"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/anywhichway/joex/issues"
  },
  "homepage": "https://github.com/anywhichway/joex#readme",
  "devDependencies": {
    "chai": "^3.4.1",
    "istanbul": "^0.4.1",
    "mocha": "^2.3.4"
  },
  "readme": "# joex\r\nJavascript Object Extensions\r\n\r\nAdds lt, lte, eq, neq, gte, gt to Number, String, Boolean, Date\r\n\r\nAdds between and outside to Number and String\r\n\r\nAdds soundex to String\r\n\r\nAdds before, adjacentOrBefore, afterAdjacentorAfter, isLeapYear and getLastDayOfMonth to Date\r\n\r\nAdds intersects, disjoint, coincident, crossproduct, min, max, avg to Array and Set\r\n\r\nAdds some, every, and toJSON to Set. toJSON results in an array like representation.\r\n\r\n[![Codacy Badge](https://api.codacy.com/project/badge/grade/8ff33e04aa48424c97f63740e87afd9d)](https://www.codacy.com/app/syblackwell/joex)\r\n\r\n# Installation\r\n\r\nnpm install joex\r\n\r\nThe index.js and package.json files are compatible with node-require so that joex can be served directly to the browser from the node-modules/joex directory when using node Express.\r\n\r\nTo modify the global objects a web browser set the global objetc to its extended equivalent, e.g. Date = ExtendedDate. To access them in node.js use the normal require syntax, e.g.\r\n\r\n```\r\nvar Date = require(\"joex\").ExtendedDate\r\n```\r\n\r\n# Release History (reverse chronological order)\r\n\r\nv0.1.0 2015-12-31 Modified so code does not directly overload built-in objects. Started adding unit tests. This was a breaking change with respect to module loading, so semantic version was incremented.\r\n\r\nv0.0.9 2015-12-31 Added isLeapYear and getLastDayOfMonth functions for Date. Remove dependencies on Time and TimeSpan.\r\n\r\nv0.0.8 2015-12-13 Codacy improvements.\r\n\r\nv0.0.7 2015-12-13 Removed data extensions to Date object.\r\n\r\nv0.0.6 2015-12-13 Codacy improvements\r\n\r\nv0.0.5 2015-11-29 Initial public release. No unit tests yet. Consider this an ALPHA.\r\n\r\n# License\r\n\r\nMIT License - see LICENSE file",
  "readmeFilename": "README.md",
  "gitHead": "58537e373c8216440f4feb94f0a555fc506bf7f7",
  "_id": "joex@0.0.10",
  "_shasum": "eb1c3760697de7cf53c5cc741e3fa703f483b9a4",
  "_from": "joex@*"
}
